syntax = "proto3";
package songwongtp.asset.asset;

import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/songwongtp/asset-chain/x/asset/types";

// Msg defines the asset Msg service.
service Msg {
    // BuyAsset defines a method for buying any asset using uusd
    rpc BuyAsset(MsgBuyAsset) returns (MsgBuyAssetResponse);

    // SellAsset defines a method for selling any asset to uusd
    rpc SellAsset(MsgSellAsset) returns (MsgSellAssetResponse);

    // SetAssetPrice defines a method for setting any asset price
    rpc SetAssetPrice(MsgSetPrice) returns (MsgSetPriceResponse);

    // AddAssetSupply defines a method for adding any asset supply
    rpc AddAssetSupply(MsgAddSupply) returns (MsgAddSupplyResponse);
}

// MsgBuyAsset repesents a message to buy asset using uusd
message MsgBuyAsset {
    option (gogoproto.equal)            = false;
    option (gogoproto.goproto_getters)  = false;

    string  buyer       = 1;
    string  denom       = 2;
    uint64  amount      = 3;
}

// MsgBuyAssetResponse defines Msg/BuyAsset response type.
message MsgBuyAssetResponse {}

// MsgSellAsset represents a message to sell asset to uusd
message MsgSellAsset {
    option (gogoproto.equal)            = false;
    option (gogoproto.goproto_getters)  = false;

    string  seller      = 1;
    string  denom       = 2;
    uint64  amount      = 3;
}

// MsgSellAssetResponse defines Msg/SellAsset response type.
message MsgSellAssetResponse {}

// MsgSetPrice represents a message to set asset price
message MsgSetPrice {
    string  addr        = 1;
    string  denom       = 2;
    uint64  price       = 3;
}

// MsgSetPriceResponse defines Msg/SetPrice response type.
message MsgSetPriceResponse {}

// MsgAddSupply represents a message to add asset supply
message MsgAddSupply {
    string  addr        = 1;
    string  denom       = 2;
    uint64  amount      = 3;
}

// MsgAddSupplyResopnse defines Msg/AddSupply response type.
message MsgAddSupplyResponse {}